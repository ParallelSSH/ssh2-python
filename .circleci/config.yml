version: 2.1

orbs:
  python: circleci/python@0.3.2

jobs:
  python_test:
    parameters:
      python_ver:
        type: string
        default: "3.6"
    docker:
      - image: circleci/python:<< parameters.python_ver >>
    steps:
      - checkout
      - python/load-cache:
          dependency-file: requirements_dev.txt
          key: depsv3-{{ .Branch }}.{{ arch }}-PY<< parameters.python_ver >>
      - run:
          name: Deps
          command: |
            sudo apt-get install cmake openssh-server
            pip install -r requirements_dev.txt
      - python/save-cache:
          dependency-file: requirements_dev.txt
          key: depsv3-{{ .Branch }}.{{ arch }}-PY<< parameters.python_ver >>
      - run:
          command: |
            python setup.py build_ext --inplace
            eval "$(ssh-agent -s)"
          name: Build
      - run:
          command: |
            ls -lhtr ssh2/
            pwd
            pytest tests
            flake8 ssh2
            python setup.py sdist
            cd dist; pip install *; python -c 'from ssh2.session import Session; Session()'; cd ..
            cd doc
            make html
            cd ..
          name: Test

  osx:
    parameters:
      xcode_ver:
        type: string
        default: "11.6.0"
    macos:
      xcode: << parameters.xcode_ver >>
    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1
      SYSTEM_LIBSSH2: 1
    steps:
      - checkout
      - run:
          name: deps
          command: |
            brew install cmake git-lfs python libssh2
            pip3 install twine
            which twine
      - run:
          name: Build Wheel
          command: |
            ./ci/osx-wheel.sh
      - store_artifacts:
          path: wheels
      - run:
          name: Upload Wheel
          command: |
            twine upload --skip-existing -u $PYPI_USER -p $PYPI_PASSWORD wheels/*

  manylinux:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - python/load-cache:
          key: manylinuxdepsv6-{{ .Branch }}.{{ arch }}
          dependency-file: requirements_dev.txt
      - run:
          name: Git LFS
          command: |
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
            sudo apt-get install git-lfs
            git lfs install
            git lfs pull
      - run:
          name: Deps
          command: |
            sudo apt-get install python-pip
            pip install -U pip
            pip install twine
            which twine
      - python/save-cache:
          key: manylinuxdepsv6-{{ .Branch }}.{{ arch }}
          dependency-file: requirements_dev.txt
      - run:
          name: Build Wheels
          command: |
            if [[ -z "${CIRCLE_PULL_REQUEST}" ]]; then
              echo "$DOCKER_PASSWORD" | docker login -u="$DOCKER_USERNAME" --password-stdin;
            fi
            ./ci/travis/build-manylinux.sh
      - run:
          name: sdist
          command: python setup.py sdist
      - run:
          name: Upload Wheels
          command: |
            twine upload --skip-existing -u $PYPI_USER -p $PYPI_PASSWORD dist/* wheelhouse/*

  manylinux2014-aarch64:
    machine:
      image: ubuntu-2004:202101-01
    resource_class: arm.medium
    steps:
      - checkout
      - python/load-cache:
          key: manylinuxdepsv6-{{ .Branch }}.{{ arch }}
          dependency-file: requirements_dev.txt
      - run:
          name: Git LFS
          command: |
            curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | sudo bash
            sudo apt-get install git-lfs
            git lfs install
            git lfs pull
      - run:
          name: Deps
          command: |
            sudo apt-get install python3-pip
            pip3 install -U pip
            pip3 install twine
            which twine
      - python/save-cache:
          key: manylinuxdepsv6-{{ .Branch }}.{{ arch }}
          dependency-file: requirements_dev.txt
      - run:
          name: Build Wheels
          command: |
            if [[ -z "${CIRCLE_PULL_REQUEST}" ]]; then
              docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" ;
            fi
            ./ci/travis/build-manylinux.sh
      - run:
          name: Upload Wheels
          command: |
            twine upload --skip-existing -u $PYPI_USER -p $PYPI_PASSWORD dist/* wheelhouse/*

workflows:
  version: 2.1
  main:
    jobs:
      - python_test:
          matrix:
            parameters:
              python_ver:
                - "3.6"
                - "3.7"
                - "3.8"
          filters:
            tags:
              ignore: /.*/
      - manylinux:
          context: Docker
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - manylinux2014-aarch64:
          context: Docker
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - osx:
          matrix:
            parameters:
              xcode_ver:
                - "11.6.0"
                - "11.1.0"
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
